clear all 
close all
clc

T = readtable('data.csv');
X=T{:,3:end};
y=T{:,2};
[a,b]=size(y);
[A,B]=size(X);
Y=zeros(a,1);
for i=1:a
   if (y{i}=='B')
       Y(i)=1;
   
   end
end
X=X';
Y=Y';
Y=categorical(Y);
layers = [...
    
    sequenceInputLayer(size(X, 1)), ...     

    fullyConnectedLayer(10, ...                  
    'WeightsInitializer', 'narrow-normal', ...
    'BiasInitializer', 'narrow-normal'), ...
    
    softmaxLayer, ...                           
    
    fullyConnectedLayer(5, ...                  
    'WeightsInitializer', 'narrow-normal', ...
    'BiasInitializer', 'narrow-normal'), ...
    
    softmaxLayer, ...                            
    
    fullyConnectedLayer(3, ...                  
    'WeightsInitializer', 'narrow-normal', ...
    'BiasInitializer', 'narrow-normal'), ...
    
    softmaxLayer, ...                          
    
    fullyConnectedLayer(2, ...                   
    'WeightsInitializer', 'narrow-normal', ...
    'BiasInitializer', 'narrow-normal'), ...
    
    softmaxLayer, ...                           
    
    classificationLayer ...                    
];

analyzeNetwork(layers)

options = trainingOptions(...
    'adam', ...                                   
    'InitialLearnRate', 0.01, ...                 
    'MaxEpochs', 2, ...                        
    'Verbose', true, ...                          
    'Shuffle', 'every-epoch', ...                 
    'Plots', 'training-progress' ...             
);    
[dnn, trainingInfo] = trainNetwork(X, Y, layers, options);

ypred_dnn = classify(dnn, X);

figure;
plotconfusion(ypred_dnn, Y);


title("Deep (5-layer) neural network results");
xlabel("True"); ylabel("Prediction");
xticklabels(["Benign", "Malignant"]);
yticklabels(["Benign", "Malignant"]);
